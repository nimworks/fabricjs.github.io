{"version":3,"sources":["webpack:///./src/components/list/thumbnailList.jsx","webpack:///./src/templates/demos.jsx"],"names":["ThumbnailList","children","className","Demos","data","darkBg","title","style","allDemoPagesMD","totalCount","demoPages","map","frontmatter","fields","key","slug","description","linkToUrlSlug","buttonText","gatsbyImgFluid","thumbnail","childImageSharp","fluid","query"],"mappings":"+NAIe,SAASA,EAAT,GAAsC,IAAbC,EAAY,EAAZA,SACtC,OACE,wBAAIC,UAAU,aACXD,G,4BCEQ,SAASE,EAAT,GAA0B,IAATC,EAAQ,EAARA,KAE9B,OACE,kBAAC,IAAD,CAAQC,QAAM,GACZ,kBAAC,IAAD,CAAKC,MAAM,mBACX,8CACA,uBAAGC,MAAO,CAAE,aAAc,WAAgBH,EAAKI,eAAeC,WAApBL,sFAC1C,kBAACJ,EAAD,KACGI,EAAKI,eAAeE,UAAUC,KAAI,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,OAAhB,OACjC,wBAAIC,IAAKD,EAAOE,MACd,kBAAC,IAAD,CACET,MAAOM,EAAYN,MACnBU,YAAaJ,EAAYI,YACzBC,cAAeJ,EAAOE,KACtBG,WAAW,YACXC,eAAgBP,EAAYQ,UAC1BR,EAAYQ,UAAUC,gBAAgBC,MAEtC,aAkBT,IAAMC,EAAK,a","file":"component---src-templates-demos-jsx-91cd7a9153349f4a4a63.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './thumbnailList.css';\n\nexport default function ThumbnailList({ children }) {\n  return (\n    <ul className=\"thumbList\">\n      {children}\n    </ul>\n  );\n}\n\nThumbnailList.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport { graphql } from 'gatsby';\n// import GatsbyImage from \"gatsby-image\";\nimport PropTypes from 'prop-types';\nimport Layout from '../components/layoutFullWidth';\nimport ThumbnailList from '../components/list/thumbnailList';\nimport ThumbnailCard from '../components/card/thumbnailCard';\nimport Seo from '../components/seo';\n\nexport default function Demos({ data }) {\n  const pageDesc = 'Awesome demos portraying various interactive aspects and capabilities of FabricJS';\n  return (\n    <Layout darkBg>\n      <Seo title=\"FabricJS demos\" />\n      <h1>FabricJS Demos</h1>\n      <p style={{ 'text-align': 'center' }}>{`${data.allDemoPagesMD.totalCount} ${pageDesc}`}</p>\n      <ThumbnailList>\n        {data.allDemoPagesMD.demoPages.map(({ frontmatter, fields }) => ( // map((demoPage)=>(\n          <li key={fields.slug}>\n            <ThumbnailCard\n              title={frontmatter.title}\n              description={frontmatter.description}\n              linkToUrlSlug={fields.slug}\n              buttonText=\"View demo\"\n              gatsbyImgFluid={frontmatter.thumbnail ? (\n                frontmatter.thumbnail.childImageSharp.fluid\n              ) : (\n                null\n              )}\n            />\n          </li>\n        ))}\n\n      </ThumbnailList>\n    </Layout>\n  );\n}\n\n// Programmatically create pages from data -- https://www.gatsbyjs.org/tutorial/part-seven/\n// Adding markdown pages -- https://www.gatsbyjs.org/docs/adding-markdown-pages/\n// Working with Images in Markdown Posts and Pages -- https://www.gatsbyjs.org/docs/working-with-images-in-markdown/\n\n// eslint-disable-next-line max-len\n// note that we ignore fetching sub-posts in this query coz we do not want to list sub-posts when listing projects\n// Sub-posts will b accessible from the page of the relevant post they belong to\nexport const query = graphql`\n  query{\n    allDemoPagesMD: allMarkdownRemark(\n      filter: {fileAbsolutePath: {regex: \"//demo/[a-zA-Z0-9-]+/index.md$/\"}},\n      sort: {order: ASC, fields: frontmatter___title}\n    ) {\n      totalCount\n      demoPages: nodes {\n        frontmatter {\n          title\n          description\n          thumbnail {\n            childImageSharp {\n              fluid(maxWidth: 400) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n\nDemos.propTypes = {\n  data: PropTypes.shape({\n    // eslint-disable-next-line react/forbid-prop-types\n    allDemoPagesMD: PropTypes.object,\n  }).isRequired,\n};\n"],"sourceRoot":""}