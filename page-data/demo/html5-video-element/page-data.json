{"componentChunkName":"component---src-templates-demo-jsx","path":"/demo/html5-video-element","result":{"data":{"demoPage":{"html":"<div\n  class=\"codepen-later\"\n  data-editable=\"true\"\n  data-height=\"500\"\n  data-default-tab=\"result\"\n  data-prefill='{\n    \"scripts\": [\"https://unpkg.com/fabric@4.0.0-beta.12/dist/fabric.js\"]\n  }'\n>\n<pre data-lang=\"css\" data-options-autoprefixer=\"true\">\n</pre>\n<pre data-lang=\"html\">\n  <video height=\"360\" width=\"480\" id=\"video1\" style=\"display: none\" muted>\n    <source src=\"http://html5demos.com/assets/dizzy.mp4\">\n    <source src=\"http://html5demos.com/assets/dizzy.ogv\">\n  </video>\n  <video height=\"360\" width=\"500\" id=\"webcam\" style=\"display: none\"></video>\n  <canvas id=\"c\" width=\"1200\" height=\"700\" style=\"border:1px solid #ccc\"></canvas>\n</pre>\n<pre data-lang=\"js\">\nvar canvas = new fabric.Canvas('c');\nvar video1El = document.getElementById('video1');\nvar webcamEl = document.getElementById('webcam');\n<p>var video1 = new fabric.Image(video1El, {\nleft: 200,\ntop: 300,\nangle: -15,\noriginX: 'center',\noriginY: 'center',\nobjectCaching: false,\n});</p>\n<p>var webcam = new fabric.Image(webcamEl, {\nleft: 539,\ntop: 328,\nangle: 94.5,\noriginX: 'center',\noriginY: 'center',\nobjectCaching: false,\n});</p>\n<p>canvas.add(video1);\nvideo1.getElement().play();</p>\n<p>// Older browsers might not implement mediaDevices at all, so we set an empty object first\nif (navigator.mediaDevices === undefined) {\nnavigator.mediaDevices = {};\n}</p>\n<p>if (navigator.mediaDevices.getUserMedia === undefined) {\nnavigator.mediaDevices.getUserMedia = function(constraints) {</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\t// First get ahold of the legacy getUserMedia, if present\n\tvar getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n\n\t// Some browsers just don&#39;t implement it - return a rejected promise with an error\n\t// to keep a consistent interface\n\tif (!getUserMedia) {\n\t\treturn Promise.reject(new Error(&#39;getUserMedia is not implemented in this browser&#39;));\n\t}\n\n\t// Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\n\treturn new Promise(function(resolve, reject) {\n\t\tgetUserMedia.call(navigator, constraints, resolve, reject);\n\t});\n}</code></pre></div>\n<p>}</p>\n<p>// adding webcam video element\nnavigator.mediaDevices.getUserMedia({\nvideo: true\n})\n.then(function getWebcamAllowed(localMediaStream) {\nwebcamEl.srcObject = localMediaStream;</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\tcanvas.add(webcam);\n\twebcam.moveTo(0); // move webcam element to back of zIndex stack\n\twebcam.getElement().play();\n}).catch(function getWebcamNotAllowed(e) {\n\t// block will be hit if user selects &quot;no&quot; for browser &quot;allow webcam access&quot; prompt\n});</code></pre></div>\n<p>fabric.util.requestAnimFrame(function render() {\ncanvas.renderAll();\nfabric.util.requestAnimFrame(render);\n});</p>\n</pre>\n</div>","frontmatter":{"title":"HTML5 &lt;video&gt; element"},"mdFile":{"__typename":"File","relativePath":"demo/html5-video-element/index.md"}}},"pageContext":{"slug":"/demo/html5-video-element","prev":{"title":"Free drawing","slug":"/demo/free-drawing"},"next":{"title":"Intersection","slug":"/demo/intersection"}}}}