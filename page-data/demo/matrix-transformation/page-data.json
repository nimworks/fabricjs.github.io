{"componentChunkName":"component---src-templates-demo-jsx","path":"/demo/matrix-transformation","result":{"data":{"demoPage":{"html":"<p>TransformMatrix was the only way to represent some SVG transformations. Since 2.0 the transformation can be decomponed and used with the normal object properties.</p>\n<p>This is the code behind the merge button. There are no plans to update controls to respect transformMatrix, but probably deprecate it.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">item</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// get the current transform matrix, from object properties.</span>\n<span class=\"token keyword\">var</span> currentT <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span><span class=\"token function\">calcTransformMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// get the transformMatrix array</span>\n<span class=\"token keyword\">var</span> transformMatrix <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>transformMatrix<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// multiply the matrices together to get the combined transform</span>\n<span class=\"token keyword\">var</span> mT <span class=\"token operator\">=</span> fabric<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">multiplyTransformMatrices</span><span class=\"token punctuation\">(</span>currentT<span class=\"token punctuation\">,</span> transformMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Unfold the matrix in a combination of scaleX, scaleY, skewX, skewY...</span>\n<span class=\"token keyword\">var</span> options <span class=\"token operator\">=</span> fabric<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">qrDecompose</span><span class=\"token punctuation\">(</span>mT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> newCenter <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\tx<span class=\"token operator\">:</span> options<span class=\"token punctuation\">.</span>translateX<span class=\"token punctuation\">,</span>\n\ty<span class=\"token operator\">:</span> options<span class=\"token punctuation\">.</span>translateY\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// reset transformMatrix to identity and resets flips since negative scale</span>\n<span class=\"token comment\">// resulting from decompose, will automatically set them.</span>\nobj<span class=\"token punctuation\">.</span>transformMatrix <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">.</span>flipX <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">.</span>flipY <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// position the object in the center given from translateX and translateY</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">setPositionByOrigin</span><span class=\"token punctuation\">(</span>newCenter<span class=\"token punctuation\">,</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This demo shows the result of applying <code class=\"language-text\">transformMatrix</code> to a Fabric object. For more on <code class=\"language-text\">transformMatrix</code>, see <a href=\"http://www.senocular.com/flash/tutorials/transformmatrix/\">this excellent tutorial</a></p>\n<div\n  class=\"codepen-later\"\n  data-editable=\"true\"\n  data-height=\"500\"\n  data-default-tab=\"result\"\n  data-prefill='{\n    \"scripts\": [\"https://unpkg.com/fabric@4.0.0-beta.12/dist/fabric.js\"]\n  }'\n>\n<pre data-lang=\"css\" data-options-autoprefixer=\"true\">\ntd { color: green; font-size: 24px; }\ntd:first-child:before {\n  content: '[';\n  color: red;\n  margin-right: 5px;\n  font-weight: bold;\n  font-size: 24px;\n}\ntd:first-child:after {\n  content: ',';\n  color: red;\n  font-weight: bold;\n  font-size: 24px;\n  margin-left: 5px;\n}\ntd:last-child:after {\n  content: ']';\n  color: red;\n  margin-right: 5px;\n  font-weight: bold;\n  font-size: 24px;\n  margin-left: 5px;\n}\n.controls {\n  display: inline-block;\n  vertical-align: top;\n}\n.controls code {\n  display: block;\n  margin-top: 10px;\n  margin-left: 5px;\n}\ntd span {\n  display: inline-block;\n  width: 30px;\n}\ninput {\n  width: 100px;\n  font-size: 24px;\n  font-family: monospace;\n  color: #888;\n}\n</pre>\n<pre data-lang=\"html\">\n<canvas id=\"canvas\" width=\"600\" height=\"600\" style=\"border:1px solid #aaa\"></canvas>\n<div class=\"controls\">\n  <form id=\"numbers\" >\n  <table>\n    <tr>\n      <td><span>a:</span><input type=\"number\" value=\"1\" step=\"0.02\" id=\"a\"></td>\n      <td><span>b:</span><input type=\"number\" value=\"0\" step=\"0.02\" id=\"b\"></td>\n    </tr>\n    <tr>\n      <td><span>c:</span><input type=\"number\" value=\"0\" step=\"0.02\" id=\"c\"></td>\n      <td><span>d:</span><input type=\"number\" value=\"1\" step=\"0.02\" id=\"d\"></td>\n    </tr>\n    <tr>\n      <td><span>tx:</span><input type=\"number\" value=\"0\" step=\"1\" id=\"tx\"></td>\n      <td><span>ty:</span><input type=\"number\" value=\"0\" step=\"1\" id=\"ty\"></td>\n    </tr>\n  </table>\n  </form>\n  <button id=\"merge\" >Merge transform</button>\n  <code>\n    transformMatrix == [\n    <span id=\"a-val\">1</span>,\n    <span id=\"b-val\">0</span>,\n    <span id=\"c-val\">0</span>,\n    <span id=\"d-val\">1</span>,\n    <span id=\"tx-val\">0</span>,\n    <span id=\"ty-val\">0</span>\n    ]<br />\n    mergedProperties:<br />\n    ScaleX: <span id=\"scaleX\">1</span>,<br />\n    ScaleY: <span id=\"scaleY\">1</span>,<br />\n    SkewX: <span id=\"skewX\">0</span>,<br />\n    SkewY: <span id=\"skewY\">0</span>,<br />\n    top: <span id=\"top\">0</span>,<br />\n    left: <span id=\"left\">0</span>,<br />\n    flipX: <span id=\"flipX\">0</span>,<br />\n    flipY: <span id=\"flipY\">0</span>,<br />\n    angle: <span id=\"angle\">0</span>\n  </code>\n</div>\n</pre>\n<pre data-lang=\"js\">\nvar demoImg = 'http://www.fabricjs.com/assets/printio.png';\n<p>(function() {\nvar canvas = this.__canvas = new fabric.Canvas('canvas');\nfabric.Image.fromURL(demoImg, function(image) {\ncanvas.add(image);\nimage.transformMatrix = [1, 0, 0, 1, 0, 0];\n});</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function update() {\n\tcanvas.requestRenderAll();\n\tvar matrix = canvas.item(0).transformMatrix;\n\tdocument.getElementById(&#39;a-val&#39;).innerHTML = matrix[0];\n\tdocument.getElementById(&#39;b-val&#39;).innerHTML = matrix[1];\n\tdocument.getElementById(&#39;c-val&#39;).innerHTML = matrix[2];\n\tdocument.getElementById(&#39;d-val&#39;).innerHTML = matrix[3];\n\tdocument.getElementById(&#39;tx-val&#39;).innerHTML = matrix[4];\n\tdocument.getElementById(&#39;ty-val&#39;).innerHTML = matrix[5];\n\tdocument.getElementById(&#39;scaleX&#39;).innerHTML = canvas.item(0).scaleX;\n\tdocument.getElementById(&#39;scaleY&#39;).innerHTML = canvas.item(0).scaleY;\n\tdocument.getElementById(&#39;skewX&#39;).innerHTML = canvas.item(0).skewX;\n\tdocument.getElementById(&#39;skewY&#39;).innerHTML = canvas.item(0).skewY;\n\tdocument.getElementById(&#39;top&#39;).innerHTML = canvas.item(0).top;\n\tdocument.getElementById(&#39;left&#39;).innerHTML = canvas.item(0).left;\n\tdocument.getElementById(&#39;flipX&#39;).innerHTML = canvas.item(0).flipX;\n\tdocument.getElementById(&#39;flipY&#39;).innerHTML = canvas.item(0).flipY;\n\tdocument.getElementById(&#39;angle&#39;).innerHTML = canvas.item(0).angle;\n}\n\ndocument.getElementById(&#39;a&#39;).oninput = function() {\n\tcanvas.item(0).transformMatrix[0] = parseFloat(this.value, 10);\n\tupdate();\n};\ndocument.getElementById(&#39;b&#39;).oninput = function() {\n\tcanvas.item(0).transformMatrix[1] = parseFloat(this.value, 10);\n\tupdate();\n};\ndocument.getElementById(&#39;c&#39;).oninput = function() {\n\tcanvas.item(0).transformMatrix[2] = parseFloat(this.value, 10);\n\tupdate();\n};\ndocument.getElementById(&#39;d&#39;).oninput = function() {\n\tcanvas.item(0).transformMatrix[3] = parseFloat(this.value, 10);\n\tupdate();\n};\ndocument.getElementById(&#39;tx&#39;).oninput = function() {\n\tcanvas.item(0).transformMatrix[4] = parseFloat(this.value, 10);\n\tupdate();\n};\ndocument.getElementById(&#39;ty&#39;).oninput = function() {\n\tcanvas.item(0).transformMatrix[5] = parseFloat(this.value, 10);\n\tupdate();\n};\ndocument.getElementById(&#39;merge&#39;).onclick = function() {\n\tvar obj = canvas.item(0);\n\tvar currentT = obj.calcTransformMatrix();\n\tvar transformMatrix = obj.transformMatrix;\n\tvar mT = fabric.util.multiplyTransformMatrices(currentT, transformMatrix);\n\tvar options = fabric.util.qrDecompose(mT);\n\tvar newCenter = {\n\t\tx: options.translateX,\n\t\ty: options.translateY\n\t};\n\tobj.transformMatrix = [1, 0, 0, 1, 0, 0];\n\tobj.flipX = false;\n\tobj.flipY = false;\n\tobj.set(options);\n\tobj.setPositionByOrigin(newCenter, &#39;center&#39;, &#39;center&#39;);\n\tdocument.getElementById(&#39;numbers&#39;).reset();\n\tupdate();\n};</code></pre></div>\n<p>})();</p>\n</pre>\n</div>","frontmatter":{"title":"Matrix transformations"},"mdFile":{"__typename":"File","relativePath":"demo/matrix-transformation/index.md"}}},"pageContext":{"slug":"/demo/matrix-transformation","prev":{"title":"Manage selection","slug":"/demo/manage-selection"},"next":{"title":"Solar system","slug":"/demo/solar-system"}}}}