{"componentChunkName":"component---src-templates-demo-jsx","path":"/demo/free-drawing","result":{"data":{"demoPage":{"html":"<div\n  class=\"codepen-later\"\n  data-editable=\"true\"\n  data-height=\"500\"\n  data-default-tab=\"result\"\n  data-prefill='{\n    \"scripts\": [\"https://unpkg.com/fabric@4.0.0-rc.1/dist/fabric.js\"]\n  }'\n>\n<pre data-lang=\"css\" data-options-autoprefixer=\"true\">\n#drawing-mode {\n  margin-bottom: 10px;\n  vertical-align: top;\n}\n#drawing-mode-options {\n  display: inline-block;\n  vertical-align: top;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  background: #f5f2f0;\n  padding: 10px;\n}\nlabel {\n  display: inline-block; width: 130px;\n}\n.info {\n  display: inline-block;\n  width: 25px;\n  background: #ffc;\n}\n#bd-wrapper {\n  min-width: 1500px;\n}\n</pre>\n<pre data-lang=\"html\">\n  <canvas id=\"c\" width=\"500\" height=\"500\" style=\"border:1px solid #aaa\"></canvas>\n  <div style=\"display: inline-block; margin-left: 10px\">\n    <button id=\"drawing-mode\" class=\"btn btn-info\">Cancel drawing mode</button><br>\n    <button id=\"clear-canvas\" class=\"btn btn-info\">Clear</button><br>\n    <div id=\"drawing-mode-options\">\n      <label for=\"drawing-mode-selector\">Mode:</label>\n      <select id=\"drawing-mode-selector\">\n        <option>Pencil</option>\n        <option>Circle</option>\n        <option>Spray</option>\n        <option>Pattern</option>\n        <option>hline</option>\n        <option>vline</option>\n        <option>square</option>\n        <option>diamond</option>\n        <option>texture</option>\n      </select><br>\n      <label for=\"drawing-line-width\">Line width:</label>\n      <span class=\"info\">30</span><input type=\"range\" value=\"30\" min=\"0\" max=\"150\" id=\"drawing-line-width\"><br>\n      <label for=\"drawing-color\">Line color:</label>\n      <input type=\"color\" value=\"#005E7A\" id=\"drawing-color\"><br>\n      <label for=\"drawing-shadow-color\">Shadow color:</label>\n      <input type=\"color\" value=\"#005E7A\" id=\"drawing-shadow-color\"><br>\n      <label for=\"drawing-shadow-width\">Shadow width:</label>\n      <span class=\"info\">0</span><input type=\"range\" value=\"0\" min=\"0\" max=\"50\" id=\"drawing-shadow-width\"><br>\n      <label for=\"drawing-shadow-offset\">Shadow offset:</label>\n      <span class=\"info\">0</span><input type=\"range\" value=\"0\" min=\"0\" max=\"50\" id=\"drawing-shadow-offset\"><br>\n    </div>\n  </div>\n</pre>\n<pre data-lang=\"js\">\n(function() {\n\tvar $ = function(id) {\n\t\treturn document.getElementById(id)\n\t};\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var canvas = this.__canvas = new fabric.Canvas(&#39;c&#39;, {\n\tisDrawingMode: true\n});\n\nfabric.Object.prototype.transparentCorners = false;\n\nvar drawingModeEl = $(&#39;drawing-mode&#39;),\n\tdrawingOptionsEl = $(&#39;drawing-mode-options&#39;),\n\tdrawingColorEl = $(&#39;drawing-color&#39;),\n\tdrawingShadowColorEl = $(&#39;drawing-shadow-color&#39;),\n\tdrawingLineWidthEl = $(&#39;drawing-line-width&#39;),\n\tdrawingShadowWidth = $(&#39;drawing-shadow-width&#39;),\n\tdrawingShadowOffset = $(&#39;drawing-shadow-offset&#39;),\n\tclearEl = $(&#39;clear-canvas&#39;);\n\nclearEl.onclick = function() {\n\tcanvas.clear()\n};\n\ndrawingModeEl.onclick = function() {\n\tcanvas.isDrawingMode = !canvas.isDrawingMode;\n\tif (canvas.isDrawingMode) {\n\t\tdrawingModeEl.innerHTML = &#39;Cancel drawing mode&#39;;\n\t\tdrawingOptionsEl.style.display = &#39;&#39;;\n\t} else {\n\t\tdrawingModeEl.innerHTML = &#39;Enter drawing mode&#39;;\n\t\tdrawingOptionsEl.style.display = &#39;none&#39;;\n\t}\n};\n\nif (fabric.PatternBrush) {\n\tvar vLinePatternBrush = new fabric.PatternBrush(canvas);\n\tvLinePatternBrush.getPatternSrc = function() {\n\n\t\tvar patternCanvas = fabric.document.createElement(&#39;canvas&#39;);\n\t\tpatternCanvas.width = patternCanvas.height = 10;\n\t\tvar ctx = patternCanvas.getContext(&#39;2d&#39;);\n\n\t\tctx.strokeStyle = this.color;\n\t\tctx.lineWidth = 5;\n\t\tctx.beginPath();\n\t\tctx.moveTo(0, 5);\n\t\tctx.lineTo(10, 5);\n\t\tctx.closePath();\n\t\tctx.stroke();\n\n\t\treturn patternCanvas;\n\t};\n\n\tvar hLinePatternBrush = new fabric.PatternBrush(canvas);\n\thLinePatternBrush.getPatternSrc = function() {\n\n\t\tvar patternCanvas = fabric.document.createElement(&#39;canvas&#39;);\n\t\tpatternCanvas.width = patternCanvas.height = 10;\n\t\tvar ctx = patternCanvas.getContext(&#39;2d&#39;);\n\n\t\tctx.strokeStyle = this.color;\n\t\tctx.lineWidth = 5;\n\t\tctx.beginPath();\n\t\tctx.moveTo(5, 0);\n\t\tctx.lineTo(5, 10);\n\t\tctx.closePath();\n\t\tctx.stroke();\n\n\t\treturn patternCanvas;\n\t};\n\n\tvar squarePatternBrush = new fabric.PatternBrush(canvas);\n\tsquarePatternBrush.getPatternSrc = function() {\n\n\t\tvar squareWidth = 10,\n\t\t\tsquareDistance = 2;\n\n\t\tvar patternCanvas = fabric.document.createElement(&#39;canvas&#39;);\n\t\tpatternCanvas.width = patternCanvas.height = squareWidth + squareDistance;\n\t\tvar ctx = patternCanvas.getContext(&#39;2d&#39;);\n\n\t\tctx.fillStyle = this.color;\n\t\tctx.fillRect(0, 0, squareWidth, squareWidth);\n\n\t\treturn patternCanvas;\n\t};\n\n\tvar diamondPatternBrush = new fabric.PatternBrush(canvas);\n\tdiamondPatternBrush.getPatternSrc = function() {\n\n\t\tvar squareWidth = 10,\n\t\t\tsquareDistance = 5;\n\t\tvar patternCanvas = fabric.document.createElement(&#39;canvas&#39;);\n\t\tvar rect = new fabric.Rect({\n\t\t\twidth: squareWidth,\n\t\t\theight: squareWidth,\n\t\t\tangle: 45,\n\t\t\tfill: this.color\n\t\t});\n\n\t\tvar canvasWidth = rect.getBoundingRect().width;\n\n\t\tpatternCanvas.width = patternCanvas.height = canvasWidth + squareDistance;\n\t\trect.set({\n\t\t\tleft: canvasWidth / 2,\n\t\t\ttop: canvasWidth / 2\n\t\t});\n\n\t\tvar ctx = patternCanvas.getContext(&#39;2d&#39;);\n\t\trect.render(ctx);\n\n\t\treturn patternCanvas;\n\t};\n\n\tvar img = new Image();\n\timg.src = &#39;../assets/honey_im_subtle.png&#39;;\n\n\tvar texturePatternBrush = new fabric.PatternBrush(canvas);\n\ttexturePatternBrush.source = img;\n}\n\n$(&#39;drawing-mode-selector&#39;).onchange = function() {\n\n\tif (this.value === &#39;hline&#39;) {\n\t\tcanvas.freeDrawingBrush = vLinePatternBrush;\n\t} else if (this.value === &#39;vline&#39;) {\n\t\tcanvas.freeDrawingBrush = hLinePatternBrush;\n\t} else if (this.value === &#39;square&#39;) {\n\t\tcanvas.freeDrawingBrush = squarePatternBrush;\n\t} else if (this.value === &#39;diamond&#39;) {\n\t\tcanvas.freeDrawingBrush = diamondPatternBrush;\n\t} else if (this.value === &#39;texture&#39;) {\n\t\tcanvas.freeDrawingBrush = texturePatternBrush;\n\t} else {\n\t\tcanvas.freeDrawingBrush = new fabric[this.value + &#39;Brush&#39;](canvas);\n\t}\n\n\tif (canvas.freeDrawingBrush) {\n\t\tcanvas.freeDrawingBrush.color = drawingColorEl.value;\n\t\tcanvas.freeDrawingBrush.width = parseInt(drawingLineWidthEl.value, 10) || 1;\n\t\tcanvas.freeDrawingBrush.shadow = new fabric.Shadow({\n\t\t\tblur: parseInt(drawingShadowWidth.value, 10) || 0,\n\t\t\toffsetX: 0,\n\t\t\toffsetY: 0,\n\t\t\taffectStroke: true,\n\t\t\tcolor: drawingShadowColorEl.value,\n\t\t});\n\t}\n};\n\ndrawingColorEl.onchange = function() {\n\tcanvas.freeDrawingBrush.color = this.value;\n};\ndrawingShadowColorEl.onchange = function() {\n\tcanvas.freeDrawingBrush.shadow.color = this.value;\n};\ndrawingLineWidthEl.onchange = function() {\n\tcanvas.freeDrawingBrush.width = parseInt(this.value, 10) || 1;\n\tthis.previousSibling.innerHTML = this.value;\n};\ndrawingShadowWidth.onchange = function() {\n\tcanvas.freeDrawingBrush.shadow.blur = parseInt(this.value, 10) || 0;\n\tthis.previousSibling.innerHTML = this.value;\n};\ndrawingShadowOffset.onchange = function() {\n\tcanvas.freeDrawingBrush.shadow.offsetX = parseInt(this.value, 10) || 0;\n\tcanvas.freeDrawingBrush.shadow.offsetY = parseInt(this.value, 10) || 0;\n\tthis.previousSibling.innerHTML = this.value;\n};\n\nif (canvas.freeDrawingBrush) {\n\tcanvas.freeDrawingBrush.color = drawingColorEl.value;\n\tcanvas.freeDrawingBrush.width = parseInt(drawingLineWidthEl.value, 10) || 1;\n\tcanvas.freeDrawingBrush.shadow = new fabric.Shadow({\n\t\tblur: parseInt(drawingShadowWidth.value, 10) || 0,\n\t\toffsetX: 0,\n\t\toffsetY: 0,\n\t\taffectStroke: true,\n\t\tcolor: drawingShadowColorEl.value,\n\t});\n}</code></pre></div>\n<p>})();</p>\n</pre>\n</div>","frontmatter":{"title":"Free drawing"},"mdFile":{"__typename":"File","relativePath":"demo/free-drawing/index.md"}}},"pageContext":{"slug":"/demo/free-drawing","prev":{"title":"Events inspector","slug":"/demo/events-inspector"},"next":{"title":"HTML5 &lt;video&gt; element","slug":"/demo/html5-video-element"}}}}